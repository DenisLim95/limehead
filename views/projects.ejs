<!DOCTYPE html>
<html>
   <head>
      <meta charset="utf-8">
      <title>My Projects</title>
      <link href="https://fonts.googleapis.com/css?family=Oswald:400,700" rel="stylesheet">
      <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.3/css/bootstrap.min.css" integrity="sha384-Zug+QiDoJOrZ5t4lssLdxGhVrurbmBWopoEl+M6BdEfwnCJZtKxi1KgxUyJq13dy" crossorigin="anonymous">
      <link href="https://fonts.googleapis.com/css?family=Merriweather:400,900" rel="stylesheet">
      <link rel='stylesheet' href='/css/project_style.css'/>
   </head>
   <body>

      <ul class="nav justify-content-center">
         <li class="nav-item">
            <a class="nav-link active" href="/">HOME</a>
         </li>
         <li class="nav-item">
            <a class="nav-link active" href="/projects">PROJECTS</a>
         </li>
         <li class="nav-item">
            <a class="nav-link" href="/music">MUSIC</a>
         </li>
         <li class="nav-item">
            <a class="nav-link" href="/profile">PROFILE</a>
         </li>
         <li class="nav-item">
            <a class="nav-link" href="#">CODE</a>
         </li>
         <li class="nav-item">
            <a class="nav-link" href="/contact">CONTACT</a>
         </li>
      </ul>
<!-- 
      <div class="container-fluid">

         <h1>Academic Projects</h1>

         <div class="container">
            <h3>Project 1: Maze Runner</h3>
            <p class="language">Java</p>
            <p>A program that can navigate and locate the exit of any given maze, using a recursive algorithm, displays graphics of the maze and the path to the exit.</p>
         </div>

         <div class="container">
            <h3>Project 2: Peer-to-Peer Client</h3>
            <p class="language">Python</p>
            <p>A client in python that establishes peer-to-peer communication via UDP messages, which can broadcast to multiple peers and forward messages.</p>
         </div>

         <div class="container">
            <h3>Project 3: PocketMonster Game</h3>
            <p class="language">C++</p>
            <p>A game where one can create multiple Pocket-monsters of different power levels and element types, simulate battles, and save/load Pocket-monster profiles and data.</p>
         </div>

         <div class="container">
            <h3>Project 4: Viterbi Senior Design Project</h3>
            <p class="language">MATLAB</p>
            <ul>
               <li>Collaborated with Dr. Greg Haroutunian from the Children's Hospital of Los Angeles (CHLA) to test and potentially patent a pressurized medicinal inhaler spacer to maximize aerosolized drugs to the lungs.</li>
               <li>Designed experimental setup of scaling air behavior to sucrose water by matching Reynolds Number.</li>
               <li>Implemented Digital Image Correlation (DIC) methods with MATLAB to numerically analyze annular flow and find optimal concentric area ratio.</li>
            </ul>
         </div>

      </div>

      <div class="container-fluid">



         <h1>Personal Projects</h1>

         <div class="container">
            <h3>Project 1: Todo list app</h3>
            <p class="language">HTML/CSS/JavaScript</p>
            <p>A web app that keeps track of tasks to be completed and can mark off tasks already completed.</p>
         </div>

         <div class="container">
            <h3>Project 2: Expense Manager</h3>
            <p class="language">C++</p>
            <p>A C++ console-based app that keeps track of expenses/invoices and items, and gives short reports, like item frequency, weekly trends, vendor price tracing.</p>
         </div>

         <div class="container">
            <h3>Project 3: Weather App</h3>
            <p class="language">HTML/CSS/JavaScript/JQuery</p>
            <ul>
               <li>Built a working weather app.</li>
               <li>Connects to OpenWeatherMap API for realtime weather data.</li>
               <li>Displays local weather conditions.</li>
            </ul>
         </div>




      </div> -->

      <div class="container">

         <h1>Projects</h1>


         <div class="card w-100 bg-light">
           <div class="card-body">
             <h6 class="card-title">Integrated Media Systems Center â€“ Tesseract OCR and Image Processing  (Python)</h6>
             <ul>
                <li>
                  Built Google Tesseract based OCR model to match images of cosmetic products to the actual
                     real-world products using Python.
               </li>
               <li>
                  Developed Python script for testing 3 pipelines of pre-processing technique combinations to
                  find optimal OCR performance, including auto-skewing, text binarization, and crop-
                  methodology.
               </li>
                  
               <li>
                  Incorporated PyEnchant dictionary comparator to filter OCR output and improve accuracy.
               </li>

               <li>
                  Tested model on Perfect-500K, a dataset of beauty products integrated from 14 popular e-
                  commerce sites.
               </li>
             </ul>
             <a href="#" class="btn">See Source Code</a>
           </div>
         </div>


         <div class="card w-100 bg-light">
           <div class="card-body">
             <h6 class="card-title">Weenix Operating System (C)</h6>
             <ul>
                <li>
                  Built Google Tesseract based OCR model to match images of cosmetic products to the actual
                     real-world products using Python.
               </li>
               <li>
                  Developed key components of Unix-based Weenix Operating System, such as thread and process management.
               </li>
                  
               <li>
                  Identified and fixed kernel-level bugs using GNU Debugger.
               </li>

               <li>
                  Employed kernel level mutex locking for thread synchronization.
               </li>

               <li>
                  Implemented file abstraction and support for file memory mapping.
               </li>

               <li>
                  Implemented shadow and anonymous objects for page frame concurrency.
               </li>

             </ul>
             <a href="#" class="btn">See Source Code</a>
           </div>
         </div>


         <div class="card w-100 bg-light">
           <div class="card-body">
             <h6 class="card-title">RapRank (NodeJS, Express, MongoDB, GridFS, Mediaserver)</h6>
             <ul>
                <li>
                  A competitive music landscape website where producers upload their beats for artists to rap on,
                  and listeners vote for their favorite rap renditions.
               </li>
               <li>
                  Wrote server-side JavaScript using NodeJS and Express.
               </li>
                  
               <li>
                  Stored data using Mongoose to interact with MongoDB database.
               </li>

               <li>
                  Implemented read and write stream of music files for piping between database and file system
                  using GridFS and FS.
               </li>

             </ul>
             <a href="#" class="btn">See Source Code</a>
           </div>
         </div>


         <div class="card w-100 bg-light">
           <div class="card-body">
             <h6 class="card-title">Music Database (Java)</h6>
             <ul>
                <li>
                  Created music database that stores track, artist, and album data using SQLite and JDBC.
               </li>
               <li>
                  Built GUI program for easy interaction with database.
               </li>
                  
             </ul>
             <a href="#" class="btn">See Source Code</a>
           </div>
         </div>


         <div class="card w-100 bg-light">
           <div class="card-body">
             <h6 class="card-title">Visual Theremin (Python/OpenCV & pyaudio)</h6>
             <ul>
                <li>
                  An app that simulates the Theremin musical instrument, but using camera input.
               </li>
               <li>
                  Implemented real time motion detection using CV2 library.
               </li>
               <li>
                  Integrated PyAudio sound wave generation to play frequencies based on vertical motion information.
               </li>
                  
             </ul>
             <a href="#" class="btn">See Source Code</a>
           </div>
         </div>




      </div>

   </body>
</html>
